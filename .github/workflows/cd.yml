name: CD

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
        
jobs:
  linux:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [ubuntu-22.04, ubuntu-24.04-arm]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt update -y
          sudo apt install -y libgl1-mesa-dev libglew-dev libxext-dev cmake tar gzip

      - name: Build
        run: |
            cmake -S . -B build
            cmake --build build

      - name: Compress binaries
        run: |
          ls -lha build
          tar -czf triforce-${{ runner.os }}-${{ runner.arch }}.tar.gz -C build triforce

      - name: Create release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          files: triforce-${{ runner.os }}-${{ runner.arch }}.tar.gz

      - name: Upload release asset
        uses: actions/upload-artifact@v4
        with:
          name: triforce-${{ runner.os }}-${{ runner.arch }}
          path: triforce-${{ runner.os }}-${{ runner.arch }}.tar.gz

  macOS:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [macos-latest]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          brew install cmake

      - name: Build
        run: |
          cmake -B build -DCMAKE_POLICY_VERSION_MINIMUM=3.5
          cmake --build build

      - name: Compress binaries
        run: |
          ls -lha build
          tar -czf triforce-${{ runner.os }}-${{ runner.arch }}.tar.gz -C build triforce

      - name: Create release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          files: triforce-${{ runner.os }}-${{ runner.arch }}.tar.gz

      - name: Upload release asset
        uses: actions/upload-artifact@v4
        with:
          name: triforce-${{ runner.os }}-${{ runner.arch }}
          path: triforce-${{ runner.os }}-${{ runner.arch }}.tar.gz

  windows:
   runs-on: ${{ matrix.runner }}
   strategy:
     matrix:
       runner: [windows-latest]

   steps:
     - name: Check out code
       uses: actions/checkout@v4

     - name: Install Dependencies
       shell: cmd
       run: |
        choco install -y cmake
        git clone https://github.com/microsoft/vcpkg.git
        cd vcpkg
        bootstrap-vcpkg.bat

     - name: Build with CMake and vcpkg
       shell: cmd
       run: |
        set VCPKG_ROOT=%CD%\vcpkg
        %VCPKG_ROOT%\vcpkg install glew
        cmake -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_POLICY_VERSION_MINIMUM='3.5' -DCMAKE_TOOLCHAIN_FILE=%VCPKG_ROOT%\scripts\buildsystems\vcpkg.cmake
        cmake --build build

     - name: Compress binaries (ZIP)
       run: |
         cd build\Debug
         7z a ..\..\triforce-${{ runner.os }}-${{ runner.arch }}.zip *.exe

     - name: Create release
       if: success()
       uses: softprops/action-gh-release@v2
       with:
         files: triforce-${{ runner.os }}-${{ runner.arch }}.zip

     - name: Upload release asset
       uses: actions/upload-artifact@v4
       with:
         name: triforce-${{ runner.os }}-${{ runner.arch }}
         path: triforce-${{ runner.os }}-${{ runner.arch }}.zip